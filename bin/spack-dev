#!/usr/bin/env node
const Logger = require('../lib/logger')
const program = require('commander')
const App = require('../lib/app')
const hot = require('../lib/hot')
const server = require('../lib/server')
const { makeConfig } = require('../lib/config')
process.env.NODE_ENV = 'development'

program
  .usage('[options]')
  .option('-c,--clean', 'ignore file version,rebuild all files')
  .option('-w,--watch [watch]', 'watch file change,port is [watch]')
  .option('-d,--directory', 'work directory')
  .option('-p,--port [port]', 'web server port')
  .option('-s --server', 'server without')
  .option('-f,--folder [folder]', 'config folder')
  .parse(process.argv)

const logger = new Logger()
const specialConfig = {
  logger
}
if (program.watch) {

  specialConfig.socketPort = parseInt(program.watch)
}
if (program.directory) {
  specialConfig.directory = program.directory
}
if (program.clean) {
  specialConfig.clean = true
}
if (program.folder) {
  specialConfig.folder = program.folder
}

const config = makeConfig(specialConfig)

const app = new App(config)

app.build().then(() => {

  if (!program.server) {
    server.init({
      app,
      port: program.port || 3000
    })
  }
})

if (program.watch) {

  hot.init(app.spack.source(), program.watch, logger)
}
